openapi: '3.0.2'
info:
  title: List API for Stoics Quotes Mini Project Alterra
  version: '1.0'
servers:
  - url: http://localhost:3001/v1
    description: Development Server For Stoics Quotes 
paths:
  /ping:
    get:
      summary: Ping health check endpoint to server
      tags:
        - system
      responses:
        '200':
          description: OK
  /user/{userId}:
    get:
      tags:
        - User
      summary: Return user data
      parameters:
        - $ref: '#/components/parameters/userID'
      responses:
        '200':
          description: Returned user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseData'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundResponse'
  /user:
    post:
      tags:
        - User
      summary: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:  
        '201':
          description: Return the created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseData'

components:
  schemas:
    UserResponseData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: John Doe
        username:
          type: string
          example: johndoe
    UserNotFoundResponse:
      type: object
      properties:
        message:
          type: string
          example: 'User not found'
        data:
          type: object
          nullable: true
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: johndoe123
          format: password
  parameters:
    userID:
      name: userID
      in: path
      description: The user id that needs to be fetched
      required: true
      schema:
        type: integer
    

   
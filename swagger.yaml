openapi: '3.0.2'
info:
  title: List API for Stoics Quotes Mini Project Alterra
  version: '1.0'
servers:
  - url: http://localhost:3001/v1
    description: Development Server For Stoics Quotes 
paths:
  /ping:
    get:
      summary: Ping health check endpoint to server
      tags:
        - system
      responses:
        '200':
          description: OK
  /user/{userId}:
    get:
      tags:
        - User
      summary: Return user data
      parameters:
        - $ref: '#/components/parameters/userID'
      responses:
        '200':
          description: Returned user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseData'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundResponse'
  /user:
    post:
      tags:
        - User
      summary: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:  
        '201':
          description: Return the created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseData'
  /quote:
    get:
      tags:
        - Quote
      summary: Return a random quote
      responses:
        '200':
          description: Returned a random quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponseData'
        '404':
          description: No quotes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteNotFoundResponse'
  /quote/{quoteId}/save:
    post:
      tags:
        - Quote
      summary: Save favorite Quote 
      parameters:
        - in: path
          name: quoteId
          required: true
          schema:
            type: integer
          description: quote id to be saved
      responses:
        '200':
          description: Quote saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message to be displayed
                    example: "Success saved quote as favorite"
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericUnauthorized'
  /quote/favorites/{userId}:
    get:
      tags:
        - Quote
      summary: Return all favorite quotes for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: UserID to be searched
      responses:
        '200':
          description: Returned all favorite quotes for a user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteResponseData'
        '404':
          description: No quotes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteNotFoundResponse'


components:
  schemas:
    AllUserFavoriteQuote:
      type: object
      properties:
        user_id:
          type: integer
          description: user id
          example: 1
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/QuoteResponseData'
    GenericUnauthorized:
      type: object
      properties:
        message:
          type: string
          example: "User is unauthorized"
    QuoteResponseData:
      type: object
      properties:
        id:
          type: integer
          example: 1
        body:
          type: string 
          example: "Not all man die whining"
        author:
          type: string
          example: "Marcus Aurelius"
        quote_source:
          type: string 
          example: "Meditation XVII"
    QuoteNotFoundResponse:
      type: object
      properties:
        message:
          type: string
          example: "Quotes not found"
    UserResponseData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: John Doe
        username:
          type: string
          example: johndoe
    UserNotFoundResponse:
      type: object
      properties:
        message:
          type: string
          example: 'User not found'
        data:
          type: object
          nullable: true
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: johndoe123
          format: password
  parameters:
    userID:
      name: userID
      in: path
      description: The user id that needs to be fetched
      required: true
      schema:
        type: integer
    

   